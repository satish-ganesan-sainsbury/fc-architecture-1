@startuml "GenericCommandAndDataService"
!include included/c4_custom_context.puml

header "Generic Command And Data Service"
title <color:DarkBlue>System Context: Generic Command and Data Service


skinparam linetype polyline
skinparam package{
    nodesep 2
    ranksep 2
}
skinparam wrapWidth 200
skinparam maxMessageSize 200
skinparam ArrowColor Black
skinparam ArrowThickness 1
skinparam rectangle<<command>> {
    BackgroundColor LightGrey
    FontName Papyrus
    FontSize MAIN_FONT_SIZE
    StereotypeFontColor DarkSlateBlue
    FontColor MidnightBlue
    BorderColor MidnightBlue
    BorderThickness 4
}

LAYOUT_TOP_DOWN

package "JS" as packJS {
   package "Command Platform" as packCommandService {
     System(sysCommand, "Command Service", "GreenYellow", "haproxy","command")
     SystemDb(dbCommand, "Command DB", "Dedicated", "Brown","database","db" )
     Rel_(sysCommand, dbCommand,"Dedicated datasource visible only to specific 'MASTER' microservice", "->")
   } 
   package "Data and Events" as packDataAndEvents{
        
        SystemKafka(sysKafka, "Central Infrastructure")
   }


   package "Data Service Platform" as packDataServicePlatform {
    System(sysDataService, "Data Service", "GreenYellow", "haproxy","command")
    SystemDb(dbSlave, "Slave DB", "Dedicated", "Yellow","database","db" )
    Rel_(dbCommand, sysKafka,"Publish data events to intermediate stream", "-.>")
    Rel_(sysKafka, dbSlave,"Publish data to slave data source", "-.>")
    Rel_(sysDataService, dbSlave,  "Use data from slave data source", "<-")
   }
    

    sysCommand -[hidden]- sysKafka
    sysKafka -[hidden]- sysDataService
    
}
@enduml